DROP TABLE DYL_2G_LOST_FLAG_END2;
CREATE TABLE DYL_2G_LOST_FLAG_END2 (
	MONTH_ID				VARCHAR2(6),
	PROV_ID					VARCHAR2(3),
	AREA_ID					VARCHAR2(10),
	USER_ID					VARCHAR2(40),
	/*DEVICE_NUMBER			VARCHAR2(20),*/
	SERVICE_TYPE			VARCHAR2(20),
	IS_FREE					CHAR(1),
	IS_INNET				VARCHAR2(20),
	USER_3WU				CHAR(1),
	IS_LOWER_VALUE_USER		NUMBER,
	USER_STATUS				VARCHAR2(10),
	USER_SCORE				NUMBER,
	STABLE_FLAG				VARCHAR2(10)
);


DROP PROCEDURE P_DYL_2G_LOST_FLAG_END2;
CREATE PROCEDURE P_DYL_2G_LOST_FLAG_END2 (
	V_MONTH   IN VARCHAR2,
	V_RETCODE OUT VARCHAR2,
	V_RETINFO OUT VARCHAR2) IS
	
  V_PKG      VARCHAR2(30);
  V_TAB      VARCHAR2(300);
  V_PROCNAME VARCHAR2(300);
  V_ROWLINE  NUMBER;
  V_COUNT    NUMBER;
  V_SQL      LONG;
  V_LOG_SN   NUMBER;
BEGIN
  V_PKG      := 'LOST_2G';
  V_TAB      := 'DYL_2G_LOST_FLAG_END2';
  V_PROCNAME := 'P_DYL_2G_LOST_FLAG_END2';

   SELECT COUNT(1) INTO V_COUNT FROM DYL_2G_LOST_FLAG_END
    WHERE MONTH_ID = V_MONTH
    AND ROWNUM < 11;

IF V_COUNT = 10 THEN


INSERT INTO DYL_2G_LOST_FLAG_END2
SELECT MONTH_ID,
       PROV_ID,
       AREA_ID,
       USER_ID,
       /*DEVICE_NUMBER,*/
       SERVICE_TYPE,
       IS_FREE,
       IS_INNET,
       USER_3WU,
       IS_LOWER_VALUE_USER,
       USER_STATUS,
       USER_SCORE,
       STABLE_FLAG
FROM
(SELECT MONTH_ID,
       PROV_ID,
       AREA_ID,
       USER_ID,
       /*DEVICE_NUMBER,*/
       SERVICE_TYPE,
       IS_FREE,
       IS_INNET,
       USER_3WU,
       IS_LOWER_VALUE_USER,
       USER_STATUS,
       USER_SCORE
FROM DYL_2G_LOST_FLAG_END
WHERE MONTH_ID = V_MONTH
) T,
(
SELECT
ROUND(USER_SCORE) USER_SCORE_Z,
/*CASE WHEN SUM(COUNT(1)) OVER ( ORDER BY ROUND(USER_SCORE))/SUM(COUNT(1)) OVER (PARTITION BY 1) <= 0.3333 THEN '03'
  WHEN SUM(COUNT(1)) OVER ( ORDER BY ROUND(USER_SCORE))/SUM(COUNT(1)) OVER (PARTITION BY 1) >= 0.6666 THEN '01'
    ELSE '02'*/
CASE WHEN SUM(COUNT(1)) OVER ( ORDER BY ROUND(USER_SCORE))/SUM(COUNT(1)) OVER (PARTITION BY 1) < 0.5 THEN '0' ELSE '1' END STABLE_FLAG
FROM DYL_2G_LOST_FLAG_END
WHERE MONTH_ID = V_MONTH
AND IS_INNET = 1
AND USER_3WU = 0
AND IS_LOWER_VALUE_USER = 0
AND USER_STATUS IN ('11','12')
AND IS_FREE = 0
GROUP BY
ROUND(USER_SCORE)
ORDER BY ROUND(USER_SCORE)
) T1
WHERE ROUND(T.USER_SCORE) = T1.USER_SCORE_Z
;


      V_ROWLINE := SQL%ROWCOUNT;
      COMMIT;

    V_RETCODE := 'SUCCESS';
    V_RETINFO := 'END';
ELSE
    V_RETCODE := 'WAIT';
    V_RETINFO := 'WAIT DATA';
END IF;

EXCEPTION
  WHEN OTHERS THEN
    V_RETCODE := 'FAIL';
    V_RETINFO := SQLERRM;
END;
/
EXIT
